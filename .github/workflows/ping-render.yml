name: Keep Render Free Instance Warm

on:
  schedule:
    # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    - cron: "*/5 * * * *"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  ping:
    name: Ping Render health endpoint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
      group: ping-render
      cancel-in-progress: false
    env:
      # üîπ –£–∫–∞–∂–∏ —Å–≤–æ–π Render-–¥–æ–º–µ–Ω
      RENDER_BASE: "https://battleship-play-bot-3pcn.onrender.com"

    steps:
      - name: Show config
        run: |
          echo "Pinging Render instance:"
          echo "Base URL: $RENDER_BASE"
          echo "Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "--------------------------------------"

      - name: Warmup Render (retry if cold)
        run: |
          set +e
          url="${RENDER_BASE}/healthz"
          tries=8               # –¥–æ 8 –ø–æ–ø—ã—Ç–æ–∫ (–ø—Ä–∏–º–µ—Ä–Ω–æ 2 –º–∏–Ω—É—Ç—ã)
          delay=5               # –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 5—Å
          ok=0

          for i in $(seq 1 $tries); do
            q=$RANDOM
            echo "[$i/$tries] GET $url?_=$q"
            # –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ–ª–≥–∏–π –æ—Ç–∫–ª–∏–∫ ‚Äî Render free –º–æ–∂–µ—Ç –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è 30‚Äì90 —Å–µ–∫—É–Ω–¥
            if curl -fsS --connect-timeout 10 --max-time 60 "$url?_=$q"; then
              echo "‚úÖ Success on attempt $i"
              ok=1
              break
            else
              echo "‚ö†Ô∏è No response yet, waiting $delay s..."
              sleep $delay
              # —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –±—ç–∫–æ—Ñ—Ñ (–¥–æ 20 —Å–µ–∫)
              delay=$(( delay < 20 ? delay*2 : 20 ))
            fi
          done

          if [ "$ok" -ne 1 ]; then
            echo "::warning::Warmup didn't finish (likely cold instance still booting)."
            echo "Will try again on next cron tick."
            exit 0   # –Ω–µ —Ñ–µ–π–ª–∏–º –¥–∂–æ–±—É
          fi

          echo "üî• Render instance warmed successfully!"
